I - 1)

// déclarations de variables
// ici les déclarations de variables
// fonction d’initialisation

void setup() {
 // ici les instructions d’initialisation
 size(500, 500);
}

// boucle de rendu
void draw() {
 // ici les instructions à répéter
    //println('(', mouseX, ',' , mouseY, ')');
    //circle(mouseX, mouseY, 10);


    background(255,255,255);
    fill(0,0,0);
    circle(mouseX, mouseY, random(10,20));
    text("X:" + mouseX, 250, 250);
    text("Y:" + mouseY, 250, 280);

}

///////////////////////////////////////////////////////
I - 2a):

void setup() {
 size(500, 500);
 background(255);
}
void draw() {

 translate(mouseX, mouseY);
 // le visage de Toto
 ellipse(50, 50, 80, 80);
 
 // les yeux
 ellipse(35, 40, 15, 15);
 ellipse(65, 40, 15, 15);
 
 // le nez
 line(43, 55, 57, 55);
 line(50, 48, 50, 62);
 
 // la bouche
 line(40, 70, 60, 70);
 line(40, 75, 60, 75);
 
} 

//////////////////////////////////////////////////////
I - 2b)

void setup() {
 size(500, 500);
 background(255);
}
void draw() {

 background(51);
 translate(mouseX, mouseY);
 // le visage de Toto
 ellipse(50, 50, 80, 80);
 
 // les yeux
 ellipse(35, 40, 15, 15);
 ellipse(65, 40, 15, 15);
 
 // le nez
 line(43, 55, 57, 55);
 line(50, 48, 50, 62);
 
 // la bouche
 line(40, 70, 60, 70);
 line(40, 75, 60, 75);
 
}

///////////////////////////////////////////////////////////
I - 2c)

void Toto() {

    background(51);
    translate(mouseX - 50, mouseY - 50);

    // le visage de Toto
    ellipse(50, 50, 80, 80);
    
    // les yeux
    ellipse(35, 40, 15, 15);
    ellipse(65, 40, 15, 15);
    
    // le nez
    line(43, 55, 57, 55);
    line(50, 48, 50, 62);
    
    // la bouche
    line(40, 70, 60, 70);
    line(40, 75, 60, 75);
    
}

void setup() {
    size(500, 500);
    background(255);
    // Toto(); La fonction Translate n'est pas active
}

void draw() {
    Toto(); // Si est appelé plusieurs fois, translate() est appelé à partir du repère de chaque Toto précédent appelé.
}

////////////////////////////////////////////////////////////
II) 
void setup() {
    size(500, 500);
    background(255);
    colorMode(HSB, 500, 500, 500);
}


// void mouseReleased() {
//    fill(mouseX, mouseY , 500);
//    circle(mouseX, mouseY, 200);
//}

void mouseMoved() {
    fill(mouseX, mouseY , 500);
    circle(mouseX, mouseY, 200);
}

//void mouseDragged() {
//    fill(mouseX, mouseY , 500);
//    circle(mouseX, mouseY, 200);
//}


void draw() {
}