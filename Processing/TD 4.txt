II.1. (!)(*) Variables locales et globales 1

int rouge=25;
int vert=60;
int bleu=200;

void setup() {
 size (400,400);
 background(0,0,0);
 frameRate(50);
}


// On cherche à dessiner un rectangle qui change en permanence de couleur.
void draw() {
 fill(rouge,vert,bleu); // On remplit la forme du rectangle avec les couleurs r,g,b.
 rect(20,20,360,360); // On dessine le rectangle.
 rouge = (rouge + 1) % 255; 
 vert = (vert + 1) % 255; 
 bleu = (bleu + 1) % 255; 
}

////////////////////////////////////////////////////////////////////////////

II.2. (!)(*) Variables locales et globales 2

// Variables globales.
int rouge=25;
int vert=60;
int bleu=200;

void setup() {
 size (400,400);
 background(0,0,0);
}

// On cherche à dessiner un rectangle avec pour couleurs: r,g,b.
void draw() {
 int rouge=25;
 int vert=255;
 int bleu=255;
 fill(rouge,vert,bleu);
 rect(20,20,360,360);
}

// Les variables locales sont prioritaires aux variables globales.

//////////////////////////////////////////////////////////////////////////

II.3. (!)(*) Variables locales et globales 3

String chaine;
void setup() {
 size (400, 400);
 background(0, 0, 0);
 PFont font = createFont("Arial", 32);
 textFont(font);
}
void draw() {
 chaine="Un texte";
 text(chaine, 20, 100);
 affiche();
 text(chaine, 20, 300); // "Un texte" est affiché 2 fois.
}
void affiche() {
 String chaine="dans la fonction affiche"; // On déclare une nouvelle variable chaine, l'affichant ainsi qu'une seule fois.
 text(chaine, 20, 200);
}

// "dans la fonction affiche" est affiché 2 fois dans le programme initial. 
//        (chaine est appelé deux fois via deux fonctions différentes)

/////////////////////////////////////////////////////

III.1. (!)(**) Des variables pour dessiner

// Déclaration de variables.
// Déclaration de variables.
int taille = 10;
//int angle = 0;

void setup() {
 size(500, 500);
 background(255);
}

void draw() {
 rectangle();
}

void rectangle(){
 rectMode(CENTER);
 noFill();
 //rotate(angle);
 strokeWeight(2.5);
 rect(250, 250, taille , taille);
 //angle += 20;
 taille += 20;
}

/////////////////////////////////////////////////

IV.1. (!)(**) Un chronomètre

// Déclaration de variables.
float compteur, secondes;
int compte;

void setup(){
    size(500,500);
    background(0);
    PFont font = createFont("Arial", 32);
    textFont(font);
}


void draw(){
    secondes = compteur/59.9;
    fill(0);
    rect(0,410,500,100);
    fill(255);
    text("Temps écoulé: " + secondes +" s", 20, 450);
    compteur += 1.0;

}
void mouseClicked() {
    compte += 1;
    float temps = secondes;
    text("Temps intermédiaire " + compte + ": " + temps +" s", 10, 50+compte*50);
    
}

///////////////////////////////////////////////////////////////////////

IV.2. (!)(**) Un toto qui va et vient

int taille_y, ecart_y, echelle, angle;
int toto_x, toto_y; 
int toto_vx = 5;
int toto_vy = 0;

void setup() {
 size(500, 500);

}

void draw() {
 background(255);
 translate(toto_x, toto_y);
 toto();
 deplace();
 
}

void toto() {
 taille_y = 15;
 ecart_y = 0;
 echelle = mouseY / 100;

 // le visage de Toto
 ellipse(50, 50, 80, 80);
 // les yeux
 ellipse(35 - ecart_y, 40, taille_y, taille_y);
 ellipse(65 + ecart_y, 40, taille_y, taille_y);
 // le nez
 line(43, 55, 57, 55);
 line(50, 48, 50, 62);
 // la bouche
 line(40, 70, 60, 70);
 line(40, 75, 60, 75);
}

void deplace() {
    toto_x += toto_vx;
    toto_y += toto_vy;
}

void mouseClicked() {
    toto_vx = toto_vx * -1;
    toto_vy = toto_vy * -1;
}